@page "/"
@using SurfsUpLibrary;
@using System.Text.Json
@using SurfsUpBlazor.Components;
@inject HttpClient Http
<PageTitle>Home</PageTitle>

<h1>Surfs up</h1>

<div class="text-center">
    @if (surfboards == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <a>Name</a>
                    </th>
                    <th>
                        <a>BoardType</a>
                    </th>
                    <th>
                        <a>Price</a>
                    </th>
                    <th>
                        Image
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (Surfboard s in surfboards)
                {
                    <tr>
                        <td>
                            @s.Name;
                        </td>
                        <td>
                            @s.BoardType;
                        </td>
                        <td>
                            @s.Price;
                        </td>
                        <td>
                            @if (s.Image != "")
                            {
                                <img src="@s.Image" style="width: 150px" alt="ImageNotFound" />
                            }
                        </td>
                        <td>
                            @*<a href="@Url.Action("Create", "Rentals", new { id = item.ID})">Rent</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a>*@
                            <button type="button" class="btn btn-danger btn-sm" @onclick="() => OpenRentDialog(s)">Rent</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
@if (RentDialogOpen)
{
    <RentDialog Title="Surfboard" Text="Her the information will be" Board="@board" OnClose="@OnRentDialogClose"></RentDialog>
}
@code {
    private List<Surfboard>? surfboards;
    private Surfboard board;
    public string SearchString = String.Empty;
    List<string> options = new List<string>();

    public bool RentDialogOpen { get; set; }

    private void OnRentDialogClose(bool accepted)
    {
        RentDialogOpen = false;
        StateHasChanged();
    }
    private void OpenRentDialog(Surfboard surfboard)
    {
        board = surfboard;
        RentDialogOpen = true;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        using HttpResponseMessage response = await Http.GetAsync("https://localhost:7260/api/Surfboards/");
        response.EnsureSuccessStatusCode();
        var jsonRespone = await response.Content.ReadAsStringAsync();
        var options = new JsonSerializerOptions()
            {
                PropertyNamingPolicy = JsonNamingPolicy.CamelCase
            };
        var Surfboard = JsonSerializer.Deserialize<List<Surfboard>>(jsonRespone, options);
        surfboards = Surfboard;
        //options = surfboards.Select(s => s.Name).Distinct().ToList();
    }
}